---
name: Go
'on': [push]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-10.15
            shasum: shasum -a 512
          - os: ubuntu-20.04
            shasum: sha512sum
          - os: windows-2019
            shasum: sha512sum
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.0
      - name: Set DIP deliverable environment variable
        run: echo "dip-deliverable=dip-${{ matrix.os }}" >> $GITHUB_ENV
      - name: Use the value
        run: |
          echo "${{ env.dip-deliverable }}"
      # yamllint disable rule:line-length
      - name: Detect superfluous go modules
        run: if go mod tidy -v 2>&1 | grep unused && git checkout .; then echo "Superfluous go modules detected! Run 'go mod tidy' locally to resolve the issue" && exit 1; fi
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
      - name: Build
        run: ./scripts/build.sh
        env:
          DIP_DELIVERABLE: ${{ env.dip-deliverable }}
          SHA512_CMD: ${{ matrix.shasum }}
      - name: Quality
        run: |
          docker run --rm -v "$PWD:/mnt" koalaman/shellcheck:v0.7.1 */*.sh -x
          docker run --rm -v ${PWD}:/data markdownlint/markdownlint:0.11.0 \
            README.md -s /data/configs/.markdownlint.rb
          docker run --rm -v $(pwd):/data cytopia/yamllint:1.26-0.8 .
          docker run --rm -v $(pwd):/app -w /app -e GOFLAGS=-buildvcs=false \
            golangci/golangci-lint:v1.49.0-alpine golangci-lint run -v \
            --timeout 2m30s
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
      - name: Unit test
        run: go test -short -cover -v -coverprofile=coverage.txt -covermode=atomic ./...
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
      - name: Integration test
        run: ./test/integration-tests.sh
        env:
          DIP_DELIVERABLE: ${{ env.dip-deliverable }}
          DIP_VERSION: ${{ matrix.nexus-version }}
          DIP_API_VERSION: ${{ matrix.nexus-api-version }}
          DIP_APT_GPG_SECRET: ${{ secrets.DIP_APT_GPG_SECRET }}
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
